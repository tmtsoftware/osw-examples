[
{
  "name":"[B"}
,
{
  "name":"[Lakka.actor.ActorRef;"}
,
{
  "name":"[Lakka.actor.InternalActorRef;"}
,
{
  "name":"[Lakka.actor.LightArrayRevolverScheduler$TaskQueue;"}
,
{
  "name":"[Lakka.io.dns.RecordType;"}
,
{
  "name":"[Lakka.remote.artery.Association;"}
,
{
  "name":"[Lakka.remote.artery.AssociationState$QuarantinedTimestamp;"}
,
{
  "name":"[Lakka.routing.ConsistentRoutee;"}
,
{
  "name":"[Lakka.stream.stage.GraphStageLogic;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.deser.Deserializers;"}
,
{
  "name":"[Lcom.fasterxml.jackson.databind.ser.Serializers;"}
,
{
  "name":"[Ljava.lang.Class;"}
,
{
  "name":"[Ljava.lang.String;"}
,
{
  "name":"akka.Done"}
,
{
  "name":"akka.NotUsed"}
,
{
  "name":"akka.actor.ActorCell",
  "fields":[
    {"name":"akka$actor$dungeon$Children$$_childrenRefsDoNotCallMeDirectly"}, 
    {"name":"akka$actor$dungeon$Children$$_functionRefsDoNotCallMeDirectly"}, 
    {"name":"akka$actor$dungeon$Children$$_nextNameDoNotCallMeDirectly"}, 
    {"name":"akka$actor$dungeon$Dispatch$$_mailboxDoNotCallMeDirectly"}
  ]}
,
{
  "name":"akka.actor.ActorIdentity"}
,
{
  "name":"akka.actor.ActorInitializationException"}
,
{
  "name":"akka.actor.ActorKilledException"}
,
{
  "name":"akka.actor.ActorRef"}
,
{
  "name":"akka.actor.ActorSelectionMessage"}
,
{
  "name":"akka.actor.Address"}
,
{
  "name":"akka.actor.Identify"}
,
{
  "name":"akka.actor.IllegalActorStateException"}
,
{
  "name":"akka.actor.InvalidActorNameException"}
,
{
  "name":"akka.actor.InvalidMessageException"}
,
{
  "name":"akka.actor.Kill$"}
,
{
  "name":"akka.actor.LightArrayRevolverScheduler",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config","akka.event.LoggingAdapter","java.util.concurrent.ThreadFactory"] }]}
,
{
  "name":"akka.actor.LightArrayRevolverScheduler$TaskHolder",
  "fields":[{"name":"task"}]}
,
{
  "name":"akka.actor.LocalActorRefProvider$Guardian",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.SupervisorStrategy"] }]}
,
{
  "name":"akka.actor.LocalActorRefProvider$SystemGuardian",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.SupervisorStrategy","akka.actor.ActorRef"] }]}
,
{
  "name":"akka.actor.LocalScope$"}
,
{
  "name":"akka.actor.PoisonPill$"}
,
{
  "name":"akka.actor.Props$EmptyActor",
  "queriedMethods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.actor.RepointableActorRef",
  "fields":[
    {"name":"_cellDoNotCallMeDirectly"}, 
    {"name":"_lookupDoNotCallMeDirectly"}
  ]}
,
{
  "name":"akka.actor.Status$Failure"}
,
{
  "name":"akka.actor.Status$Success"}
,
{
  "name":"akka.actor.typed.ActorRef"}
,
{
  "name":"akka.actor.typed.internal.MiscMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.actor.typed.internal.adapter.ActorRefAdapter"}
,
{
  "name":"akka.actor.typed.internal.adapter.ActorSystemAdapter$LoadTypedExtensions$",
  "fields":[{"name":"MODULE$"}]}
,
{
  "name":"akka.actor.typed.internal.receptionist.DefaultServiceKey"}
,
{
  "name":"akka.actor.typed.internal.receptionist.ServiceKeySerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.actor.typed.receptionist.Receptionist$",
  "fields":[{"name":"MODULE$"}]}
,
{
  "name":"akka.dispatch.AbstractNodeQueue",
  "fields":[{"name":"_tailDoNotCallMeDirectly"}]}
,
{
  "name":"akka.dispatch.AbstractNodeQueue$Node",
  "fields":[{"name":"_nextDoNotCallMeDirectly"}]}
,
{
  "name":"akka.dispatch.BoundedControlAwareMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.BoundedDequeBasedMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.BoundedMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.ControlAwareMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.DequeBasedMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.Mailbox",
  "fields":[
    {"name":"_statusDoNotCallMeDirectly"}, 
    {"name":"_systemQueueDoNotCallMeDirectly"}
  ]}
,
{
  "name":"akka.dispatch.MessageDispatcher",
  "fields":[
    {"name":"_inhabitantsDoNotCallMeDirectly"}, 
    {"name":"_shutdownScheduleDoNotCallMeDirectly"}
  ]}
,
{
  "name":"akka.dispatch.MultipleConsumerSemantics"}
,
{
  "name":"akka.dispatch.SingleConsumerOnlyUnboundedMailbox",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]}
,
{
  "name":"akka.dispatch.UnboundedControlAwareMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.UnboundedDequeBasedMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.UnboundedMailbox",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]}
,
{
  "name":"akka.dispatch.UnboundedMessageQueueSemantics"}
,
{
  "name":"akka.dispatch.sysmsg.SystemMessage"}
,
{
  "name":"akka.event.DeadLetterListener",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.event.EventStreamUnsubscriber",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.event.EventStream","boolean"] }]}
,
{
  "name":"akka.event.LoggerMailboxType",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","com.typesafe.config.Config"] }]}
,
{
  "name":"akka.event.LoggerMessageQueueSemantics"}
,
{
  "name":"akka.event.slf4j.Slf4jLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.event.slf4j.Slf4jLoggingFilter",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorSystem$Settings","akka.event.EventStream"] }]}
,
{
  "name":"akka.http.impl.engine.client.PoolMasterActor",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.io.InetAddressDnsProvider",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.io.InetAddressDnsResolver",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.io.SimpleDnsCache","com.typesafe.config.Config"] }]}
,
{
  "name":"akka.io.SelectionHandler",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.io.SelectionHandlerSettings"] }]}
,
{
  "name":"akka.io.SimpleDnsManager",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.io.DnsExt"] }]}
,
{
  "name":"akka.io.TcpIncomingConnection",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.io.TcpExt","java.nio.channels.SocketChannel","akka.io.ChannelRegistry","akka.actor.ActorRef","scala.collection.immutable.Iterable","boolean"] }]}
,
{
  "name":"akka.io.TcpListener",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorRef","akka.io.TcpExt","akka.io.ChannelRegistry","akka.actor.ActorRef","akka.io.Tcp$Bind"] }]}
,
{
  "name":"akka.io.TcpManager",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.io.TcpExt"] }]}
,
{
  "name":"akka.io.TcpOutgoingConnection",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.io.TcpExt","akka.io.ChannelRegistry","akka.actor.ActorRef","akka.io.Tcp$Connect"] }]}
,
{
  "name":"akka.pattern.PromiseActorRef",
  "fields":[
    {"name":"_stateDoNotCallMeDirectly"}, 
    {"name":"_watchedByDoNotCallMeDirectly"}
  ]}
,
{
  "name":"akka.pattern.StatusReply"}
,
{
  "name":"akka.protobufv3.internal.ExtensionRegistry",
  "methods":[{"name":"getEmptyRegistry","parameterTypes":[] }]}
,
{
  "name":"akka.protobufv3.internal.GeneratedMessageV3"}
,
{
  "name":"akka.remote.DaemonMsgCreate"}
,
{
  "name":"akka.remote.PhiAccrualFailureDetector",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config","akka.event.EventStream"] }]}
,
{
  "name":"akka.remote.RemoteActorRefProvider",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","akka.actor.ActorSystem$Settings","akka.event.EventStream","akka.actor.DynamicAccess"] }]}
,
{
  "name":"akka.remote.RemoteActorRefProvider$RemotingTerminator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ActorRef"] }]}
,
{
  "name":"akka.remote.RemoteDeploymentWatcher",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.remote.RemoteScope"}
,
{
  "name":"akka.remote.RemoteWatcher$Heartbeat$"}
,
{
  "name":"akka.remote.RemoteWatcher$HeartbeatRsp"}
,
{
  "name":"akka.remote.UniqueAddress"}
,
{
  "name":"akka.remote.artery.ArteryMessage"}
,
{
  "name":"akka.remote.artery.Association",
  "fields":[{"name":"_sharedStateDoNotCallMeDirectly"}]}
,
{
  "name":"akka.remote.artery.jfr.JFRRemotingFlightRecorder",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"akka.remote.routing.RemoteRouterConfig"}
,
{
  "name":"akka.remote.serialization.ArteryMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.remote.serialization.DaemonMsgCreateSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.remote.serialization.MessageContainerSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.remote.serialization.MiscMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.remote.serialization.ProtobufSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.remote.serialization.SystemMessageSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.remote.serialization.ThrowableNotSerializableException"}
,
{
  "name":"akka.routing.BalancingPool"}
,
{
  "name":"akka.routing.BroadcastGroup"}
,
{
  "name":"akka.routing.BroadcastPool"}
,
{
  "name":"akka.routing.ConsistentHashingPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]}
,
{
  "name":"akka.routing.DefaultResizer"}
,
{
  "name":"akka.routing.FromConfig"}
,
{
  "name":"akka.routing.RandomGroup"}
,
{
  "name":"akka.routing.RandomPool"}
,
{
  "name":"akka.routing.RoundRobinGroup"}
,
{
  "name":"akka.routing.RoundRobinPool",
  "methods":[{"name":"<init>","parameterTypes":["com.typesafe.config.Config"] }]}
,
{
  "name":"akka.routing.RoutedActorCell$RouterActorCreator",
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":["akka.routing.RouterConfig"] }]}
,
{
  "name":"akka.routing.ScatterGatherFirstCompletedGroup"}
,
{
  "name":"akka.routing.ScatterGatherFirstCompletedPool"}
,
{
  "name":"akka.routing.SmallestMailboxPool"}
,
{
  "name":"akka.routing.TailChoppingGroup"}
,
{
  "name":"akka.routing.TailChoppingPool"}
,
{
  "name":"akka.serialization.BooleanSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.serialization.ByteArraySerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.serialization.ByteStringSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.serialization.DisabledJavaSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.serialization.IntSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.serialization.LongSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.serialization.SerializationExtension$",
  "fields":[{"name":"MODULE$"}]}
,
{
  "name":"akka.serialization.StringSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.stream.SinkRef"}
,
{
  "name":"akka.stream.SourceRef"}
,
{
  "name":"akka.stream.SystemMaterializer$",
  "fields":[{"name":"MODULE$"}]}
,
{
  "name":"akka.stream.impl.streamref.StreamRefsProtocol"}
,
{
  "name":"akka.stream.serialization.StreamRefSerializer",
  "methods":[{"name":"<init>","parameterTypes":["akka.actor.ExtendedActorSystem"] }]}
,
{
  "name":"akka.util.ByteString$ByteString1"}
,
{
  "name":"akka.util.ByteString$ByteString1C"}
,
{
  "name":"akka.util.ByteString$ByteStrings"}
,
{
  "name":"ch.qos.logback.classic.Logger",
  "methods":[{"name":"log","parameterTypes":["org.slf4j.event.LoggingEvent"] }]}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7HandlersImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.fasterxml.jackson.databind.ext.Java7SupportImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.crypto.provider.TlsMasterSecretGenerator",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.sun.org.apache.xerces.internal.jaxp.SAXParserFactoryImpl",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"com.typesafe.config.Config"}
,
{
  "name":"com.typesafe.config.impl.SimpleConfig"}
,
{
  "name":"csw.command.client.cbor.CommandAkkaSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"csw.command.client.messages.SupervisorContainerCommonMessages$Shutdown$"}
,
{
  "name":"csw.location.api.codec.LocationSerializable"}
,
{
  "name":"csw.location.api.serializer.LocationAkkaSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"csw.logging.client.appenders.StdOutAppender$",
  "fields":[{"name":"MODULE$"}]}
,
{
  "name":"csw.logging.client.cbor.LoggingAkkaSerializer",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"csw.logging.client.compat.AkkaLogger",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"csw.logging.client.compat.Slf4jAppender",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"csw.logging.models.codecs.LoggingSerializable"}
,
{
  "name":"csw.serializable.CommandSerializable"}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueColdProducerFields",
  "fields":[{"name":"producerLimit"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueConsumerFields",
  "fields":[{"name":"consumerIndex"}]}
,
{
  "name":"io.netty.util.internal.shaded.org.jctools.queues.BaseMpscLinkedArrayQueueProducerFields",
  "fields":[{"name":"producerIndex"}]}
,
{
  "name":"java.io.FilePermission"}
,
{
  "name":"java.io.Serializable"}
,
{
  "name":"java.lang.Boolean"}
,
{
  "name":"java.lang.ClassValue"}
,
{
  "name":"java.lang.Integer"}
,
{
  "name":"java.lang.Long"}
,
{
  "name":"java.lang.RuntimePermission"}
,
{
  "name":"java.lang.String",
  "fields":[{"name":"value"}]}
,
{
  "name":"java.lang.Thread",
  "methods":[{"name":"onSpinWait","parameterTypes":[] }]}
,
{
  "name":"java.lang.Throwable"}
,
{
  "name":"java.lang.invoke.VarHandle",
  "methods":[{"name":"releaseFence","parameterTypes":[] }]}
,
{
  "name":"java.lang.management.ManagementFactory",
  "methods":[{"name":"getRuntimeMXBean","parameterTypes":[] }]}
,
{
  "name":"java.lang.management.RuntimeMXBean",
  "methods":[{"name":"getInputArguments","parameterTypes":[] }]}
,
{
  "name":"java.net.NetPermission"}
,
{
  "name":"java.net.SocketPermission"}
,
{
  "name":"java.net.URLPermission",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.String","java.lang.String"] }]}
,
{
  "name":"java.nio.Bits",
  "fields":[{"name":"UNALIGNED"}]}
,
{
  "name":"java.nio.Buffer",
  "fields":[{"name":"address"}]}
,
{
  "name":"java.nio.ByteBuffer",
  "fields":[
    {"name":"hb"}, 
    {"name":"offset"}
  ],
  "queriedMethods":[{"name":"alignedSlice","parameterTypes":["int"] }]}
,
{
  "name":"java.nio.DirectByteBuffer",
  "queriedMethods":[{"name":"<init>","parameterTypes":["long","int"] }]}
,
{
  "name":"java.security.AlgorithmParametersSpi"}
,
{
  "name":"java.security.AllPermission"}
,
{
  "name":"java.security.KeyStoreSpi"}
,
{
  "name":"java.security.MessageDigestSpi"}
,
{
  "name":"java.security.SecureRandomParameters"}
,
{
  "name":"java.security.SecurityPermission"}
,
{
  "name":"java.util.Optional"}
,
{
  "name":"java.util.PropertyPermission"}
,
{
  "name":"java.util.concurrent.TimeoutException"}
,
{
  "name":"javax.management.ObjectName"}
,
{
  "name":"javax.security.auth.x500.X500Principal",
  "fields":[{"name":"thisX500Name"}],
  "queriedMethods":[{"name":"<init>","parameterTypes":["sun.security.x509.X500Name"] }]}
,
{
  "name":"jdk.internal.misc.Unsafe",
  "methods":[{"name":"getUnsafe","parameterTypes":[] }]}
,
{
  "name":"jdk.jfr.Event"}
,
{
  "name":"m1cs.segments.assembly.SegmentsAssemblyBehaviorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"m1cs.segments.hcd.SegmentsHcdBehaviorFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.agrona.concurrent.AbstractConcurrentArrayQueueConsumer",
  "fields":[{"name":"head"}]}
,
{
  "name":"org.agrona.concurrent.AbstractConcurrentArrayQueueProducer",
  "fields":[
    {"name":"sharedHeadCache"}, 
    {"name":"tail"}
  ]}
,
{
  "name":"org.keycloak.representations.adapters.config.AdapterConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true,
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"org.keycloak.representations.adapters.config.AdapterHttpClientConfig",
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.keycloak.representations.adapters.config.BaseAdapterConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[{"name":"setResource","parameterTypes":["java.lang.String"] }]}
,
{
  "name":"org.keycloak.representations.adapters.config.BaseRealmConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "methods":[
    {"name":"setAuthServerUrl","parameterTypes":["java.lang.String"] }, 
    {"name":"setRealm","parameterTypes":["java.lang.String"] }
  ]}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig$EnforcementMode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig$MethodConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig$PathCacheConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig$PathConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig$ScopeEnforcementMode",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true}
,
{
  "name":"org.keycloak.representations.adapters.config.PolicyEnforcerConfig$UserManagedAccessConfig",
  "allDeclaredFields":true,
  "queryAllDeclaredMethods":true,
  "queryAllDeclaredConstructors":true}
,
{
  "name":"org.slf4j.spi.LocationAwareLogger",
  "queryAllDeclaredMethods":true}
,
{
  "name":"scala.Boolean"}
,
{
  "name":"scala.Int"}
,
{
  "name":"scala.Long"}
,
{
  "name":"scala.None$"}
,
{
  "name":"scala.Some"}
,
{
  "name":"sun.misc.Unsafe",
  "allDeclaredFields":true,
  "methods":[{"name":"invokeCleaner","parameterTypes":["java.nio.ByteBuffer"] }],
  "queriedMethods":[
    {"name":"arrayBaseOffset","parameterTypes":["java.lang.Class"] }, 
    {"name":"arrayIndexScale","parameterTypes":["java.lang.Class"] }, 
    {"name":"copyMemory","parameterTypes":["long","long","long"] }, 
    {"name":"copyMemory","parameterTypes":["java.lang.Object","long","java.lang.Object","long","long"] }, 
    {"name":"getAndAddLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"getAndSetObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }, 
    {"name":"getBoolean","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getByte","parameterTypes":["long"] }, 
    {"name":"getByte","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getDouble","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getFloat","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getInt","parameterTypes":["long"] }, 
    {"name":"getInt","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getLong","parameterTypes":["long"] }, 
    {"name":"getLong","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"getObject","parameterTypes":["java.lang.Object","long"] }, 
    {"name":"objectFieldOffset","parameterTypes":["java.lang.reflect.Field"] }, 
    {"name":"putBoolean","parameterTypes":["java.lang.Object","long","boolean"] }, 
    {"name":"putByte","parameterTypes":["long","byte"] }, 
    {"name":"putByte","parameterTypes":["java.lang.Object","long","byte"] }, 
    {"name":"putDouble","parameterTypes":["java.lang.Object","long","double"] }, 
    {"name":"putFloat","parameterTypes":["java.lang.Object","long","float"] }, 
    {"name":"putInt","parameterTypes":["long","int"] }, 
    {"name":"putInt","parameterTypes":["java.lang.Object","long","int"] }, 
    {"name":"putLong","parameterTypes":["long","long"] }, 
    {"name":"putLong","parameterTypes":["java.lang.Object","long","long"] }, 
    {"name":"putObject","parameterTypes":["java.lang.Object","long","java.lang.Object"] }
  ]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.pkcs12.PKCS12KeyStore$DualFormatPKCS12",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.JavaKeyStore$JKS",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.NativePRNG",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.SHA",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.provider.X509Factory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.rsa.RSAKeyFactory$Legacy",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.KeyManagerFactoryImpl$SunX509",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.SSLContextImpl$DefaultSSLContext",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.ssl.TrustManagerFactoryImpl$PKIXFactory",
  "methods":[{"name":"<init>","parameterTypes":[] }]}
,
{
  "name":"sun.security.x509.AuthorityInfoAccessExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.AuthorityKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.BasicConstraintsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CRLDistributionPointsExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.CertificatePoliciesExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.ExtendedKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.IssuerAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.KeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.NetscapeCertTypeExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.PrivateKeyUsageExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectAlternativeNameExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}
,
{
  "name":"sun.security.x509.SubjectKeyIdentifierExtension",
  "methods":[{"name":"<init>","parameterTypes":["java.lang.Boolean","java.lang.Object"] }]}

]
